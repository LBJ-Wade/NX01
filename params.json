{"name":"NX01","tagline":"Python code to perform isotropic, anisotropic (non-evolving/evolving) searches.","body":"NX01\r\n====\r\n\r\nPython code to perform isotropic, anisotropic (non-evolving/evolving)\r\nsearches for gravitational-waves via pulsar-timing.\r\n\r\nPerhaps you want the [webpage](http://stevertaylor.github.io/NX01/)?\r\n\r\n## Code list\r\n\r\n* **NX01_master.py**: performs a full evolving-anisotropy GWB and\r\n  noise analysis. Uses MultiNest or parallel-tempering sampling.\r\n* **NX01_singlePsr.py**: performs a stochastic\r\n  search for single-pulsar noise parameters within the reduced-rank\r\n  time-frequency approximation. Uses MultiNest or parallel-tempering sampling.\r\n* **NX01_AnisCoefficients.py**: utility file to create power-anisotropy\r\n  basis-functions.\r\n* **NX01_utils.py**: utility file.\r\n* **NX01_plot.py**: plotting package, adapted and extended from PAL.\r\n* **NX01_psr.py**: utility file which defines the pulsar class for\r\nstoring all relevant variables.\r\n* **NX01_datafile.py**: creates an hdf5 container to store all the\r\ninformation in the pulsar class. Useful for storing array products.\r\n* **NX01_jitter.pxy**: cython code to perform Sherman-Morrison\r\n  block noise-matrix inversions when handling ECORR (jitter). \r\n* **NX01_bayesutils.py**: utilities file for generating plotting data.\r\n\r\n## Preliminaries\r\n\r\nOne important first thing to note is to make sure you have\r\ncorrectly updated your tempo2 clock files with the corresponding files packaged with\r\nthe NANOGrav data download.\r\n\r\nIt is recommended that you initially open and follow the steps in the\r\n`nanograv-pulsar-store.ipynb` notebook, and produce your own\r\n`PsrListings_GWB.txt` and `PsrListings_CW.txt`. These latter files are\r\nlists of pulsars in the order with which they contribute to the\r\nstochastic background upper limit (`_GWB.txt`) and the single-source\r\nSNR (`_CW.txt`). Each pulsar is associated with a path to an hdf5 file\r\n(storing all pulsar properties), parfile, and timfile.\r\n\r\nBy following the steps in the notebook (only up until the\r\ncross-validation plotting between NX01 and PAL2) you will produce your\r\nown hdf5 files, which you should put in a directory of your\r\nchoice. These hdf5 files will store everything you need for subsequent\r\nGW searches. Another important step in the notebook is to produce par\r\nfiles which are stripped of tempo2 EFAC, EQUAD, ECORR, RedAmp, and\r\nRedInd values. These values are replaced by mean values from Justin's\r\nprevious single-pulsar analyses.\r\n\r\n## Single-pulsar noise analysis\r\n\r\nIt should be straightforward to perform a single-pulsar noise analysis\r\nout of the box. \r\n\r\nRun `python NX01_singlePsr.py --help` for a list of all options.\r\n\r\nAn example run command would be:\r\n```\r\npython NX01_singlePsr.py\r\n--parfile=./NANOGrav_9y/par/J1713+0747_NANOGrav_9yv1.t2.gls.strip.par\r\n--timfile=./NANOGrav_9y/tim/J1713+0747_NANOGrav_9yv1.tim\r\n--efacequad-sysflag=f --fullN --ptmcmc\r\n```\r\n\r\nWithout the `--ptmcmc` option, the sampler will default to MultiNest.\r\n\r\nIf you have MPI installed you can parallelise by running the\r\nfollowing:\r\n```\r\nmpirun -np 4 NX01_singlePsr.py\r\n--parfile=./NANOGrav_9y/par/J1713+0747_NANOGrav_9yv1.t2.gls.strip.par\r\n--timfile=./NANOGrav_9y/tim/J1713+0747_NANOGrav_9yv1.tim\r\n--efacequad-sysflag=f --fullN --ptmcmc\r\n```\r\nwhere 4 cores will produce 4 temperature chains in the\r\nparallel-tempering MCMC sampling process. Without the `--ptmcmc`\r\ncommand, 4 cores would have been used to update the live points in MultiNest.\r\n\r\n\r\n## Gravitational-wave searches\r\n\r\nIt is recommended to read in pulsars from their respective hdf5 files,\r\nwhich you should have previously produced from the\r\n`nanograv-pulsar-store.ipynb` notebook.\r\n\r\nRun `python NX01_master.py --help` for a list of all options.\r\n\r\nAn example run command would be:\r\n```\r\npython NX01_master.py --from-h5\r\n--psrlist=./PsrListings_GWB.txt --nmodes=15\r\n--incGWB --fix-slope --num_psrs=18 --fullN\r\n```\r\nwhich will perform a GW background upper-limit analysis (without\r\ncorrelations...to include correlations add `--incCorr`) on the 18 pulsars analyzed in the 9-year NANOGrav limit paper.\r\n\r\nAs in the single-pulsar analysis case, you can use MPI for the PTMCMC,\r\nhowever MultiNest functionality is not yet ready.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}